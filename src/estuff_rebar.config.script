NameUpper = string:to_upper("{{name}}").

BuildType = 
    case os:getenv(NameUpper ++ "_BUILD") of
        false ->
            default;
        BuildTypeX ->
            erlang:list_to_atom(string:to_lower(BuildTypeX))
    end.


Version =
    case os:getenv(NameUpper ++ "VERSION") of
        false ->
            {Y, Mo, D} = erlang:date(),
            {H, Mi, S} = erlang:time(),
            lists:flatten(io_lib:format("~p.~p.~p.~p.~p.~p", [Y, Mo, D, H, Mi, S]));
        VersionX ->
            VersionX
    end.


Release =
    fun() ->
        {_, {_, RelXOpts}, Cfg2} = lists:keytake(relx, 1, CONFIG),
        [{relx, [{release, {{{name}}, Version}, [{sasl, load}, {{name}}]} | RelXOpts]} | Cfg2]
    end.


Dialyzer =
    fun() ->
        CONFIG
    end.


Test = 
    fun() ->
        CONFIG
    end.


Docs = 
    fun() ->
        CONFIG
    end.


Shell = 
    fun() ->
        CONFIG
    end.


Default = 
    fun() ->
        CONFIG
    end.


Cfg =
    []
    ++
    case BuildType of
        release ->
            Release();
        dialyzer ->
            Dialyzer();
        test ->
            Test();
        docs ->
            Docs();
        shell -> 
            Shell();
        _ -> % default: Used as dependency
            Default()
    end
    ++
    [].

%io:format("~p\n", [Cfg]).

Cfg.
